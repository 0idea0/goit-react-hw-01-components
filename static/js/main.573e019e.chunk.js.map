{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/StatisticsItem.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistoryItem.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","followers","views","likes","className","styles","profile","description","src","alt","width","label","quantity","defaultProps","username","randomBgColor","r","Math","floor","random","g","b","StatisticItem","percentage","item","style","backgroundColor","Statistics","title","statistics","statlist","map","prop","key","id","FriendListItem","isOnline","online","offline","FriendList","friends","friendList","friend","TransactionHistoryItem","type","amount","currency","TransactionHistory","items","transactionHistory","App","userData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.573e019e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3tfAn\",\"description\":\"Profile_description__2gwXT\",\"avatar\":\"Profile_avatar__29BDy\",\"name\":\"Profile_name__3VZZM\",\"tag\":\"Profile_tag__3rkWO\",\"location\":\"Profile_location__Tq1ME\",\"stats\":\"Profile_stats__3E3_n\",\"label\":\"Profile_label__3UiFZ\",\"quantity\":\"Profile_quantity__3kh39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__hr_6b\",\"title\":\"Statistics_title__2Tw9F\",\"statlist\":\"Statistics_statlist__3jN9c\",\"item\":\"Statistics_item__zrQB3\",\"label\":\"Statistics_label__2Te-e\",\"percentage\":\"Statistics_percentage__DOGIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1C78Q\",\"item\":\"FriendList_item__2GLNj\",\"status\":\"FriendList_status__3umPt\",\"online\":\"FriendList_online__3oXbr FriendList_status__3umPt\",\"offline\":\"FriendList_offline__YE_Up FriendList_status__3umPt\",\"avatar\":\"FriendList_avatar__3Uw5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2E5fI\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({\n  avatar,\n  name,\n  tag,\n  location,\n  stats: { followers, views, likes },\n}) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt={name} width=\"150\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>@{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.defaultProps = {\n  username: 'unknown user',\n  tag: 'no tag',\n  location: 'no location',\n  avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png',\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\n\nimport styles from './Statistics.module.css';\n\nconst randomBgColor = () => {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nconst StatisticItem = ({ label, percentage }) => {\n  return (\n    <li className={styles.item} style={{ backgroundColor: randomBgColor() }}>\n      <span className={styles.label}>{label}</span>\n      <span className={styles.percentage}>{percentage}%</span>\n    </li>\n  );\n};\n\nexport default StatisticItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatisticItem from './StatisticsItem';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ title, statistics }) => {\n  return (\n    <section className={styles.statistics}>\n      <div>\n        {title && <h2 className={styles.title}>{title}</h2>}\n        <ul className={styles.statlist}>\n          {statistics.map(prop => (\n            <StatisticItem {...prop} key={prop.id} />\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  prop: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Statistics;\n","import React from 'react';\n//import PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\nconst FriendListItem = ({ isOnline, avatar, name }) => {\n  return (\n    <li className={styles.item}>\n      {isOnline ? (\n        <span className={styles.online}></span>\n      ) : (\n        <span className={styles.offline}></span>\n      )}\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\n/* FriendListItem.defaultProps = {\n  avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png',\n  name: 'unknown user',\n  isOnline: false,\n};\n\nFriendListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n}; */\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friendList}>\n    {friends.map(friend => (\n      <FriendListItem {...friend} key={friend.id} />\n    ))}\n  </ul>\n);\n\nFriendList.defaultProps = {\n  isOnline: false,\n  avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png',\n  name: 'unknown user',\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default FriendList;\n","import React from 'react';\n\nconst TransactionHistoryItem = ({ type, amount, currency }) => {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nexport default TransactionHistoryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TransactionHistoryItem from './TransactionHistoryItem';\n\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(item => (\n        <TransactionHistoryItem {...item} key={item.id} />\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  item: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n  }),\n};\n\nexport default TransactionHistory;\n","import './App.css';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport userData from './data/user.json';\nimport statistics from './data/data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile {...userData} />\n      <Statistics title=\"Upload stats\" statistics={statistics} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}